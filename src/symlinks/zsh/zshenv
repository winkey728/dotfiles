get_os() {

    local os=""
    local kernelName=""

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    kernelName="$(uname -s)"

    case "$kernelName" in
        Darwin*)
            os="macos" ;;
        Linux*)
            if [ -e "/etc/lsb-release" ]; then
                os="ubuntu"
            fi
            ;;
        *)
            os="$kernelName"
            ;;
    esac

    printf "%s" "$os"

}

source_zsh_files() {

    declare -r CURRENT_DIRECTORY="$(pwd)"
    declare -r OS="$(get_os)"

    declare -ar FILES_TO_SOURCE=(
        "zconf/aliases/aliases.zsh"
        "zconf/aliases/$OS/aliases.zsh"
        "zconf/exports.zsh"
        "zconf/functions.zsh"
        "zconf/keybindings.zsh"
        "zconf/options.zsh"
        "zsh.local" # For local settings that should
                    # not be under version control
    )

    local file=""
    local i=""

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd "$(dirname "$(readlink "${(%):-%x}")")"

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    for f in $FILES_TO_SOURCE; do

        file="$HOME/.$f"

        [ -r "$file" ] \
            && . "$file"

    done

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    cd "$CURRENT_DIRECTORY"

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

source_zsh_files
unset -f source_zsh_files
unset -f get_os

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Clear system messages (system copyright notice, the date
# and time of the last login, the message of the day, etc.).

clear
